const Anvil=function(e){const t=this,o=function(t){var o=e,n=t.split(".");for(i=0;i<n.length-1;i++)if(null==(o=o[n[i]]))return;return o[n[n.length-1]]};this._hold_={components:{},expression:[]},this._core_={collect:e=>{let t=document.querySelectorAll("component");for(let e of t){const t=e.getAttribute("*name").toUpperCase();this._hold_.components[t]={render:e.querySelector("render").cloneNode(!0),props:[...e.querySelectorAll("prop")].map(e=>({name:e.getAttribute("*name"),type:e.getAttribute("*type"),default:e.textContent})),function:{load:e.getAttribute("(load)"),change:e.getAttribute("(change)")}}}},inherit:(e,t)=>{for(let o of e.attributes)"class"==o.nodeName?t.classList.add(o.nodeValue):t.setAttribute(o.nodeName,o.nodeValue);t.querySelectorAll("*")},bind:function(e,o){const n=this;this._hold_={props:{},include:[]},this.bind=((e,t,o,n)=>{Object.defineProperty(data.params,param.name,{get:n,set:n})}),this.update=(o=>{for(let r of n._hold_.include)r.expression.includes(o)&&(r.node.textContent=r.expression.replace(/\{\{(.*?)\}\}/g,e=>{return this.parse(e)}),t._core_.trigger(e,"change",{target:r.node,bind:n,modify:r.node,props:this._hold_.props,params:this._hold_.props,__anvil__:t}))}),this.collect=(()=>{for(let r of t._hold_.components[e].props){switch(r.type){case"Number":this._hold_.props[`_${r.name}`]=parseFloat(o.getAttribute(`${r.name}`)||r.default),Object.defineProperty(this._hold_.props,r.name,{get:function(){return parseFloat(this[`_${r.name}`])},set:function(e){n._hold_.props[`_${r.name}`]=parseFloat(e),n.update(r.name)}});break;case"String":this._hold_.props[`_${r.name}`]=o.getAttribute(`${r.name}`)||r.default,Object.defineProperty(this._hold_.props,r.name,{get:function(){return this[`_${r.name.toString()}`]},set:function(e){n._hold_.props[`_${r.name}`]=e.toString(),n.update(r.name)}})}o.removeAttribute(r.name)}}),this.parse=(n=>{let r=t._hold_.components[e].props.map((e,t,o)=>e.name);return n=n.slice(2,n.length-2),new Function(...r,`return ${n}`).apply(o,Object.values(this._hold_.props))}),this.build=(e=>{if(3==e.nodeType)e.textContent=e.textContent.replace(/\{\{(.*?)\}\}/g,t=>{return this._hold_.include.push({node:e,expression:e.textContent}),this.parse(t)});else if(e.attributes)for(let t of e.attributes)t.value=t.value.replace(/\{\{(.*?)\}\}/g,e=>{return this._hold_.include.push({node:t,expression:t.value}),this.parse(e)});for(let t of e.childNodes)this.build(t)}),this.collect(),this.build(o)},build:e=>{for(let t of Object.keys(this._hold_.components))for(;e.getElementsByTagName(`${t}`).length>0;)this._core_.render(e.getElementsByTagName(`${t}`)[0])},trigger:(e,t,n)=>{this._hold_.components[e].function[t]&&o(this._hold_.components[e].function[t])(n)},render:e=>{const o=e.tagName,n=this._hold_.components[o].render.querySelector("*").cloneNode(!0);n.querySelectorAll("*");e.replaceWith(n);const r=n.querySelector("root");r&&(console.log(r),r.replaceWith(...e.childNodes)),this._core_.inherit(e,n),this._core_.build(n);const s=new this._core_.bind(o,n);n.onload=this._core_.trigger(o,"load",{target:n,bind:s,props:s._hold_.props,params:s._hold_.props,__anvil__:t})}},this.init=(()=>{anvil._core_.collect(document),this._core_.build(document),new MutationObserver((e,t)=>{for(const t of e)if("childList"===t.type){let e=t.addedNodes[t.addedNodes.length-1];e&&1==e.nodeType&&this._hold_.components[e.tagName]&&this._core_.render(e)}}).observe(document.body,{attributes:!0,childList:!0,subtree:!0})})};